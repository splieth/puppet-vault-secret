# This is an autogenerated function, ported from the original legacy version.
# It /should work/ as is, but will not have all the benefits of the modern
# function API. You should see the function docs to learn how to add function
# signatures for type safety and to document this function using puppet-strings.
#
# https://puppet.com/docs/puppet/latest/custom_functions_ruby.html
#
# ---- original file header ----
require 'vault'

# ---- original file header ----
#
# @summary
#   Summarise what the function does here
#
Puppet::Functions.create_function(:'vault_secret::read_secret') do
  # @param args
  #   The original array of arguments. Port this to individually managed params
  #   to get the full benefit of the modern function API.
  #
  # @return [Data type]
  #   Describe what the function returns here
  #
  dispatch :default_impl do
    # Call the method named 'default_impl' when this is matched
    # Port this to match individual params for better type safety
    repeated_param 'Any', :args
  end


  def default_impl(*args)
    
    secret_path = args[0]
    secret_value = args[1]

    raise ArgumentError, 'Wrong number of arguments' if args.size != 2

    raise 'VAULT_ADDR not set' unless ENV['VAULT_ADDR']
    raise 'VAULT_TOKEN not set' unless ENV['VAULT_TOKEN']

    Vault.address = ENV['VAULT_ADDR']
    Vault.token = ENV['VAULT_TOKEN']

    begin
      secret = Vault.logical.read(secret_path).data[secret_value.to_sym]
    rescue
      puts 'Error reading from Vault :/'
    end
  
  end
end
